fn getch()->int;
fn getint()->int;
fn putint(a:int);
fn putch(a:int);
fn putarray(n:int,a[10]:int);
fn _sysy_starttime(a:int);
fn _sysy_stoptime(a:int);

fn uniquePaths(m:int, n:int)->int {
    if((m == 1) || (n == 1))
    {
        ret 1;
    }

    let dp[9]:int;
    let i:int;
    let j:int;
    i = 0;
    let temp1:int;
    let temp2:int;
    let temp3:int;
    while(i<m){
        temp1 = i*3+n-1;
        dp[temp1]=1;
        i = i + 1;
    }
    i = 0;
    while(i<n){
        temp1 = (m-1)*3+i;
        dp[temp1]=1;
        i = i + 1;
    }
    i=m-2;
    while(i > (0-1)){
        j=n-2;
        while(j > (0-1)){
            temp1 = i*3+j;
            temp2 = (i+1)*3+j;
            temp3 = i*3+j+1;
            dp[temp1] = dp[temp2] + dp[temp3];
            j = j - 1;
        }
        i = i - 1;
    }
    ret dp[0];
}
fn main()->int{
    let res:int;
    let n:int;
    n=3;
    res = uniquePaths(n, n);
    ret res;
}