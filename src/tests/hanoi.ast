A_program 
	|--A_programElement 
		|--A_fnDeclStmt 
			|--A_fnDecl fn getch(
				|--A_paramDecl )->
			|--A_type int;

	|--A_programElement 
		|--A_fnDeclStmt 
			|--A_fnDecl fn getint(
				|--A_paramDecl )->
			|--A_type int;

	|--A_programElement 
		|--A_fnDeclStmt 
			|--A_fnDecl fn putint(
				|--A_paramDecl 
					|--A_varDecl 
						|--A_varDeclScalar a:
						|--A_type int);

	|--A_programElement 
		|--A_fnDeclStmt 
			|--A_fnDecl fn putch(
				|--A_paramDecl 
					|--A_varDecl 
						|--A_varDeclScalar a:
						|--A_type int);

	|--A_programElement 
		|--A_fnDeclStmt 
			|--A_fnDecl fn putarray(
				|--A_paramDecl 
					|--A_varDecl 
						|--A_varDeclScalar n:
						|--A_type int, 
					|--A_varDecl 
						|--A_varDeclArray a[10]:
						|--A_type int);

	|--A_programElement 
		|--A_fnDeclStmt 
			|--A_fnDecl fn _sysy_starttime(
				|--A_paramDecl 
					|--A_varDecl 
						|--A_varDeclScalar a:
						|--A_type int);

	|--A_programElement 
		|--A_fnDeclStmt 
			|--A_fnDecl fn _sysy_stoptime(
				|--A_paramDecl 
					|--A_varDecl 
						|--A_varDeclScalar a:
						|--A_type int);

	|--A_programElement 
		|--A_fnDef 
			|--A_fnDecl fn move(
				|--A_paramDecl 
					|--A_varDecl 
						|--A_varDeclScalar x:
						|--A_type int, 
					|--A_varDecl 
						|--A_varDeclScalar y:
						|--A_type int){

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putint(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit x);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putch(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 32);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putint(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit y);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putch(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 44);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putch(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 32);
}

	|--A_programElement 
		|--A_fnDef 
			|--A_fnDecl fn hanoi(
				|--A_paramDecl 
					|--A_varDecl 
						|--A_varDeclScalar n:
						|--A_type int, 
					|--A_varDecl 
						|--A_varDeclScalar one:
						|--A_type int, 
					|--A_varDecl 
						|--A_varDeclScalar two:
						|--A_type int, 
					|--A_varDecl 
						|--A_varDeclScalar three:
						|--A_type int){

			|--A_codeBlockStmt 
				|--A_ifStmt if(
					|--A_boolUnit (
						|--A_comExpr 
							|--A_exprUnit n==
							|--A_exprUnit 1)){

					|--A_codeBlockStmt 
						|--A_callStmt 
							|--A_fnCall move(
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit one, 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit three);
}else{

					|--A_codeBlockStmt 
						|--A_callStmt 
							|--A_fnCall hanoi(
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit n-
										|--A_arithExpr 
											|--A_exprUnit 1, 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit one, 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit three, 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit two);

					|--A_codeBlockStmt 
						|--A_callStmt 
							|--A_fnCall move(
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit one, 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit three);

					|--A_codeBlockStmt 
						|--A_callStmt 
							|--A_fnCall hanoi(
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit n-
										|--A_arithExpr 
											|--A_exprUnit 1, 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit two, 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit one, 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit three);
}
}

	|--A_programElement 
		|--A_fnDef 
			|--A_fnDecl fn main(
				|--A_paramDecl )->
			|--A_type int{

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDef 
						|--A_varDefScalar n:
						|--A_type int = 
						|--A_rightVal 
							|--A_arithExpr 
								|--A_exprUnit 
									|--A_fnCall getint();

			|--A_codeBlockStmt 
				|--A_whileStmt while(
					|--A_boolUnit (
						|--A_comExpr 
							|--A_exprUnit n>
							|--A_exprUnit 0)){

					|--A_codeBlockStmt 
						|--A_callStmt 
							|--A_fnCall hanoi(
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit 
										|--A_fnCall getint(), 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit 1, 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit 2, 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit 3);

					|--A_codeBlockStmt 
						|--A_callStmt 
							|--A_fnCall putch(
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit 10);

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal n = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit n-
										|--A_arithExpr 
											|--A_exprUnit 1;
}

			|--A_codeBlockStmt 
				|--A_returnStmt ret 
				|--A_rightVal 
					|--A_arithExpr 
						|--A_exprUnit 0;
}
